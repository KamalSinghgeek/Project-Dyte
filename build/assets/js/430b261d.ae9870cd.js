"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[63249],{94220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"capabilities/chat/export-chat-dump","title":"Export Chat Messages","description":"You can programmatically retrieve all chat messages of a Dyte session in the following ways:","source":"@site/docs/guides/capabilities/chat/export-chat-dump.mdx","sourceDirName":"capabilities/chat","slug":"/capabilities/chat/export-chat-dump","permalink":"/guides/capabilities/chat/export-chat-dump","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/guides/capabilities/chat/export-chat-dump.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":8,"frontMatter":{"title":"Export Chat Messages","sidebar_position":8,"sidebar_slug":"export-chat-dump"},"sidebar":"tutorialSidebar","previous":{"title":"Meeting Transcription","permalink":"/guides/capabilities/ai/meeting-transcription"},"next":{"title":"Basics","permalink":"/guides/capabilities/plugins"}}');var i=n(74848),o=n(28453);const a={title:"Export Chat Messages",sidebar_position:8,sidebar_slug:"export-chat-dump"},l="Export Chat of a Session",d={},r=[{value:"Get <code>chat_download_url</code>",id:"get-chat_download_url",level:2},{value:"Download the chat dump file",id:"download-the-chat-dump-file",level:2},{value:"Download on the client",id:"download-on-the-client",level:3},{value:"Download on the server",id:"download-on-the-server",level:3},{value:"Example: CSV chat dump file",id:"example-csv-chat-dump-file",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"export-chat-of-a-session",children:"Export Chat of a Session"})}),"\n",(0,i.jsx)(t.p,{children:"You can programmatically retrieve all chat messages of a Dyte session in the following ways:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Using ",(0,i.jsx)(t.a,{href:"/api/?v=v2#/operations/GetSessionChat",children:"Chat Replay API"})]}),"\n",(0,i.jsxs)(t.li,{children:["Setting up webhook for the ",(0,i.jsx)(t.a,{href:"/guides/capabilities/webhooks/webhook-events#meetingchatsynced",children:"meeting.chatSynced"})," event"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This guide walks you through the steps involved in exporting chat dump of a session using Chat Replay API."}),"\n",(0,i.jsxs)(t.p,{children:["If you wish to use webhooks, see ",(0,i.jsx)(t.a,{href:"/guides/capabilities/webhooks/webhooks-and-events",children:"Set Up Webhooks"})," and ",(0,i.jsx)(t.a,{href:"/guides/capabilities/webhooks/webhook-events#meetingchatsynced",children:"meeting.chatSynced"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Once ",(0,i.jsx)(t.a,{href:"/api/?v=v2#/operations/GetSessionChat",children:"Chat Replay API"})," is enabled, do the\r\nfollowing:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Get the ",(0,i.jsx)(t.code,{children:"chat_download_url"})," using\r\n",(0,i.jsx)(t.a,{href:"/api/?v=v2#/operations/GetSessionChat",children:"Chat Replay API"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Download the chat dump CSV file."}),"\n"]}),"\n",(0,i.jsxs)(t.h2,{id:"get-chat_download_url",children:["Get ",(0,i.jsx)(t.code,{children:"chat_download_url"})]}),"\n",(0,i.jsxs)(t.p,{children:["To get the ",(0,i.jsx)(t.code,{children:"chat_download_url"}),", make a ",(0,i.jsx)(t.code,{children:"HTTP GET"})," request to\r\n",(0,i.jsx)(t.a,{href:"/api/?v=v2#/operations/GetSessionChat",children:"Chat Replay API"}),". The API returns the\r\nfollowing:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\r\n  "success": true,\r\n  "data": {\r\n    "chat_download_url": "string",\r\n    "chat_download_url_expiry": "string"\r\n  }\r\n}\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"chat_download_url"})," is a URL that allows you to download the entire chat dump of a session in CSV format from AWS S3."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"chat_download_url_expiry"})," indicates the expiry timestamp of the ",(0,i.jsx)(t.code,{children:"chat_download_url"}),". If the ",(0,i.jsx)(t.code,{children:"chat_download_url"})," gets expired, simply call this endpoint again to obtain a new download URL."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"download-the-chat-dump-file",children:"Download the chat dump file"}),"\n",(0,i.jsxs)(t.p,{children:["You can download the chat dump file in CSV format by making ",(0,i.jsx)(t.code,{children:"HTTP GET"})," request\r\nto ",(0,i.jsx)(t.code,{children:"chat_download_url"})," that you obtained in the previous step."]}),"\n",(0,i.jsx)(t.p,{children:"The process of downloading any file from a HTTP URL in JavaScript differs\r\nslightly based on whether you are doing it on client side or server side."}),"\n",(0,i.jsx)(t.h3,{id:"download-on-the-client",children:"Download on the client"}),"\n",(0,i.jsx)(t.p,{children:"To download at client side, do the following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Make a GET request to the ",(0,i.jsx)(t.code,{children:"chat_download_url"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Convert response to blob."}),"\n",(0,i.jsxs)(t.li,{children:["Create an invisible ",(0,i.jsx)(t.code,{children:"<a>"})," HTML element with download attribute and add the\r\nabove blob to it's ",(0,i.jsx)(t.code,{children:"href"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Programmatically click on the ",(0,i.jsx)(t.code,{children:"<a>"})," element so that the browser automatically\r\nstarts downloading and then remove the ",(0,i.jsx)(t.code,{children:"<a>"})," element."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"download-on-the-server",children:"Download on the server"}),"\n",(0,i.jsxs)(t.p,{children:["We use ",(0,i.jsx)(t.code,{children:"Node.js"})," streams to download files on the server, so the steps are as\r\nfollows:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Create a writable stream for a local file."}),"\n",(0,i.jsxs)(t.li,{children:["Make a GET request to ",(0,i.jsx)(t.code,{children:"chat_download_url"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Get a readable stream using ",(0,i.jsx)(t.code,{children:"res.body"})," and pipe to the writable stream\r\ncreated in the first step."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example-csv-chat-dump-file",children:"Example: CSV chat dump file"}),"\n",(0,i.jsx)(t.p,{children:"This CSV file contains all the chat messages along with the participant's name\r\nand some other metadata. It includes the following column headings:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"id"}),": Unique chat message ID"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"participantId"}),": ID of the participant who sent the message"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"sessionId"}),": The session ID from which the chat message was sent"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"meetingId"}),": The ID of the meeting to which this session belongs"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"displayName"}),": Display name of the participant who sent this message"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"pinned"}),": A boolean that indicates if the current message was pinned or not"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"isEdited"}),": A boolean that indicates if the current message was edited or not"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"payloadType"}),": An ENUM that indicates the type of payload sent in the chat\r\nmessage. It can be one of TEXT_MESSAGE, IMAGE_MESSAGE, FILE_MESSAGE"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"payload"}),": The actual payload sent in the chat message"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"createdAt"}),": Timestamp when this chat message was sent"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://dyte.io/blog/content/images/size/w1600/2022/11/Dyte-Blog---Sample-Chat-Dump.png",alt:"Sample Chat Dump File"})}),"\n",(0,i.jsxs)(t.p,{children:["For more information on downloading the file, refer to\r\n",(0,i.jsx)(t.a,{href:"https://dyte.io/blog/fetch-chat-history-of-a-dyte-session/",children:"How to Fetch Chat History of a Dyte Session"}),"\r\nblog."]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("title",{children:"Export Chat Messages Guide"}),(0,i.jsx)("meta",{name:"description",content:"Explore how to export chat dumps with Dyte's capabilities. Follow our guide for effective exporting and management of chat data."})]})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(96540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);