"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[25688],{58647:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"local-user/events","title":"Events","description":"Local user events guide.","source":"@site/docs/web-core/local-user/events.mdx","sourceDirName":"local-user","slug":"/local-user/events","permalink":"/web-core/local-user/events","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/web-core/local-user/events.mdx","tags":[{"inline":true,"label":"web-core","permalink":"/web-core/tags/web-core"},{"inline":true,"label":"local-user","permalink":"/web-core/tags/local-user"},{"inline":true,"label":"self","permalink":"/web-core/tags/self"},{"inline":true,"label":"self events","permalink":"/web-core/tags/self-events"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":2,"frontMatter":{"title":"Events","description":"Local user events guide.","sidebar_position":2,"tags":["web-core","local-user","self","self events"]},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/web-core/local-user/introduction"},"next":{"title":"Manage Media Devices","permalink":"/web-core/local-user/manage-media-devices"}}');var i=r(74848),d=r(28453);const t={title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["web-core","local-user","self","self events"]},c="Local User - Events",o={},a=[{value:"Meeting joined",id:"meeting-joined",level:2},{value:"Meeting left",id:"meeting-left",level:2},{value:"Video update",id:"video-update",level:2},{value:"Audio update",id:"audio-update",level:2},{value:"Screenshare update",id:"screenshare-update",level:2},{value:"Device update",id:"device-update",level:2},{value:"Network quality score",id:"network-quality-score",level:2},{value:"Permission Updates",id:"permission-updates",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components},{Head:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"local-user---events",children:"Local User - Events"})}),"\n",(0,i.jsxs)(n.p,{children:["You can subscribe to various events on the local user by calling\r\n",(0,i.jsx)(n.code,{children:"meeting.self.on(EVENT_NAME)"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"meeting-joined",children:"Meeting joined"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the join event completes and now the ",(0,i.jsx)(n.code,{children:"meeting"})," is ready to\r\nproduce and consume media."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('roomJoined', () => {\r\n  console.log(\r\n    'User has joined the meeting and ready to produce and consume media'\r\n  );\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"meeting-left",children:"Meeting left"}),"\n",(0,i.jsx)(n.p,{children:"Triggered when the local user leaves the meeting."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"meeting.self.on('roomLeft', ({ state }) => {\r\n  // state is a string whose values are explained below\r\n  if (state === 'left') {\r\n    console.log('User has left the meeting');\r\n  }\r\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here are all the possible values of the ",(0,i.jsx)(n.code,{children:"state"})," variable."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Event"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"left"})}),(0,i.jsx)(n.td,{children:"Participant has left the meeting."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"kicked"})}),(0,i.jsx)(n.td,{children:"Participant is removed from the meeting."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ended"})}),(0,i.jsx)(n.td,{children:"Everyone is removed from the meeting, and the session has ended."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rejected"})}),(0,i.jsx)(n.td,{children:"Participant's request to join the meeting is rejected (when you're in a waiting room)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"disconnected"})}),(0,i.jsx)(n.td,{children:"Temporary network disconnection"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"failed"})}),(0,i.jsx)(n.td,{children:"Failed to join the meeting"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"connected-meeting"})}),(0,i.jsx)(n.td,{children:"Participant has left this meeting and joined a connected meeting (Breakout meeting)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"video-update",children:"Video update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the video using ",(0,i.jsx)(n.code,{children:"enableVideo"})," or\r\n",(0,i.jsx)(n.code,{children:"disableVideo"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const videoElem = document.getElementById('my-video');\r\n\r\nmeeting.self.on('videoUpdate', async ({ videoEnabled, videoTrack }) => {\r\n  if (videoEnabled) {\r\n    const stream = new MediaStream();\r\n    stream.addTrack(videoTrack);\r\n    videoElem.srcObject = stream;\r\n    videoElem.play();\r\n  } else {\r\n    videoElem.stop();\r\n  }\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"audio-update",children:"Audio update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the audio using ",(0,i.jsx)(n.code,{children:"enableAudio"})," or\r\n",(0,i.jsx)(n.code,{children:"disableAudio"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const audioElem = document.getElementById('my-audio');\r\n\r\nmeeting.self.on('audioUpdate', async ({ audioEnabled, audioTrack }) => {\r\n  if (audioEnabled) {\r\n    const stream = new MediaStream();\r\n    stream.addTrack(audioTrack);\r\n    audioElem.srcObject = stream;\r\n    audioElem.play();\r\n  } else {\r\n    audioElem.stop();\r\n  }\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"screenshare-update",children:"Screenshare update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the screen share using\r\n",(0,i.jsx)(n.code,{children:"enableScreenShare()"})," or ",(0,i.jsx)(n.code,{children:"disableScreenShare()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const screenElem = document.getElementById('my-screen-share');\r\n\r\nmeeting.self.on(\r\n  'screenShareUpdate',\r\n  async ({ screenShareEnabled, screenShareTracks }) => {\r\n    if (screenShareEnabled) {\r\n      const stream = new MediaStream();\r\n      stream.addTrack(screenShareTracks.video);\r\n      screenElem.srcObject(stream);\r\n      await screenElem.play();\r\n    } else {\r\n      await screenElem.stop();\r\n    }\r\n  }\r\n);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"device-update",children:"Device update"}),"\n",(0,i.jsxs)(n.p,{children:["Subscribe to the ",(0,i.jsx)(n.code,{children:"deviceUpdate"})," event to handle the changing video, audio and\r\nspeaker devices"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('deviceUpdate', ({ device }) => {\r\n  // handle microphone device change\r\n  if (device.kind === 'audioinput') {\r\n    console.log('mic change', device);\r\n  }\r\n  // handle camera device change\r\n  if (device.kind === 'videoinput') {\r\n    console.log('camera change', device);\r\n  }\r\n  // handle speaker device change\r\n  if (device.kind === 'audiooutput') {\r\n    console.log('speaker change', device);\r\n  }\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"network-quality-score",children:"Network quality score"}),"\n",(0,i.jsxs)(n.p,{children:["Subscribe to the ",(0,i.jsx)(n.code,{children:"mediaScoreUpdate"})," event to monitor network"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('mediaScoreUpdate', ({ kind, isScreenshare, score }) => {\r\n  if (kind === 'video') {\r\n    console.log(\r\n      `Your ${isScreenshare ? 'screenshare' : 'video'} quality score is `,\r\n      score\r\n    );\r\n  }\r\n\r\n  if (kind === 'audio') {\r\n    console.log('Your audio quality score is ', score);\r\n  }\r\n\r\n  if (score < 5) {\r\n    console.log('Your media quality is poor');\r\n  }\r\n});\n"})}),"\n",(0,i.jsx)(r,{children:(0,i.jsx)("title",{children:"Web Core Events"})}),"\n",(0,i.jsx)(n.h2,{id:"permission-updates",children:"Permission Updates"}),"\n",(0,i.jsx)(n.p,{children:"Triggered when permissions are updated dynamically by a privileged user"}),"\n",(0,i.jsxs)(n.p,{children:["Subscribe to ",(0,i.jsx)(n.code,{children:"chatUpdate"}),", ",(0,i.jsx)(n.code,{children:"pollsUpdate"}),", ",(0,i.jsx)(n.code,{children:"pluginsUpdate"})," or ",(0,i.jsx)(n.code,{children:"*"})," for any kind of permission updates\r\nExample:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.permissions.on('chatUpdate', () => {\r\n  // Chat permissions are updated\r\n  // check meeting.self.permissions for updated permissions\r\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(96540);const i={},d=s.createContext(i);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);