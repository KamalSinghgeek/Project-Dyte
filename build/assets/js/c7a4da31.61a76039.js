"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[57407],{96698:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"local-user/screen-share-guide","title":"Sharing screen on iOS","description":"This document explains how to setup screen sharing on a iOS App using Dyte SDK.","source":"@site/docs/ios-core/local-user/screen-share-guide.mdx","sourceDirName":"local-user","slug":"/local-user/screen-share-guide","permalink":"/ios-core/local-user/screen-share-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/ios-core/local-user/screen-share-guide.mdx","tags":[{"inline":true,"label":"ios-core","permalink":"/ios-core/tags/ios-core"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":12,"frontMatter":{"title":"Sharing screen on iOS","sidebar_position":12,"tags":["ios-core"]},"sidebar":"tutorialSidebar","previous":{"title":"Media Permissions","permalink":"/ios-core/local-user/manage-permissions"},"next":{"title":"Participant Types","permalink":"/ios-core/participants/"}}');var i=n(74848),r=n(28453);const o={title:"Sharing screen on iOS",sidebar_position:12,tags:["ios-core"]},a=void 0,d={},c=[{value:"Overview",id:"overview",level:2},{value:"Add a new Broadcast Upload Extension to your project.",id:"add-a-new-broadcast-upload-extension-to-your-project",level:3},{value:"Setup app groups",id:"setup-app-groups",level:3},{value:"Setup SampleHandler",id:"setup-samplehandler",level:3},{value:"Modify Info.plist",id:"modify-infoplist",level:3},{value:"Start the Screenshare",id:"start-the-screenshare",level:3},{value:"Stop the Screenshare",id:"stop-the-screenshare",level:3}];function l(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["This document explains how to setup screen sharing on a iOS App using Dyte SDK.",(0,i.jsx)(s.br,{}),"\n","To use this feature one should join the meeting with ",(0,i.jsx)(s.strong,{children:"Presets"})," in which Screenshare is enabled."]}),"\n",(0,i.jsx)(s.admonition,{type:"warning",children:(0,i.jsx)(s.p,{children:"This guide is being updated, and might not work as expected in its current form"})}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Add a new Broadcast Upload Extension to your project."}),"\n",(0,i.jsx)(s.li,{children:"Setup app groups."}),"\n",(0,i.jsxs)(s.li,{children:["Download ",(0,i.jsx)(s.code,{children:"DyteSampleHandler"})," class from ",(0,i.jsx)(s.a,{href:"https://github.com/dyte-io/iOS-ScreenShare",children:"Github repo"})," ."]}),"\n",(0,i.jsxs)(s.li,{children:["Have your SampleHandler class inherited from this downloaded class ",(0,i.jsx)(s.code,{children:"DyteSampleHandler"})," ."]}),"\n",(0,i.jsx)(s.li,{children:"Update Info.plist."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"add-a-new-broadcast-upload-extension-to-your-project",children:"Add a new Broadcast Upload Extension to your project."}),"\n",(0,i.jsxs)(s.p,{children:["Add a Broadcast Upload Extension through ",(0,i.jsx)(s.code,{children:"File"})," -> ",(0,i.jsx)(s.code,{children:"New"})," -> ",(0,i.jsx)(s.code,{children:"Target"}),".\r\nChoose ",(0,i.jsx)(s.code,{children:"iOS"})," -> ",(0,i.jsx)(s.code,{children:"Broadcast Upload Extension"})," and fill out the required information for your extension and click ",(0,i.jsx)(s.code,{children:"Finish"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.img,{alt:"meeting UI screenshot with labeled parts",src:n(56857).A+"",width:"1474",height:"1052"}),"\r\n",(0,i.jsx)(s.img,{alt:"meeting UI screenshot with labeled parts",src:n(1428).A+"",width:"1474",height:"1052"})]}),"\n",(0,i.jsx)(s.h3,{id:"setup-app-groups",children:"Setup app groups"}),"\n",(0,i.jsx)(s.p,{children:"Add your extension to an app group by going to your extension's target in the project; in the Signings & Capabilities tab, click the + button in the top left and add App Groups. If you haven't done so already, add App Groups to your main app as well, ensuring that the App Group identifier is the same for both."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.img,{alt:"meeting UI screenshot with labeled parts",src:n(41350).A+"",width:"1480",height:"1050"}),"\r\n",(0,i.jsx)(s.img,{alt:"meeting UI screenshot with labeled parts",src:n(50608).A+"",width:"1480",height:"1050"})]}),"\n",(0,i.jsx)(s.h3,{id:"setup-samplehandler",children:"Setup SampleHandler"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Edit your SampleHandler class to look something like this."}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-swift",children:"import ReplayKit\r\n\r\nclass SampleHandler: DyteSampleHandler {}\n"})}),"\n",(0,i.jsx)(s.h3,{id:"modify-infoplist",children:"Modify Info.plist"}),"\n",(0,i.jsxs)(s.p,{children:["Make sure ",(0,i.jsx)(s.strong,{children:"both of them"})," (App and Extension Info.plist) contains below key."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  <key>RTCAppGroupIdentifier</key>\r\n\t<string>(name of the group you have created)</string>\n"})}),"\n",(0,i.jsx)(s.p,{children:"Add below key inside the Info.plist of the main App."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"<key>RTCScreenSharingExtension</key>\r\n\t<string>(Bundle Identifier of the Broadcast upload extension you have added in your project)</string>\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Info.plist screenshot",src:n(25821).A+"",width:"1862",height:"300"})}),"\n",(0,i.jsx)(s.h3,{id:"start-the-screenshare",children:"Start the Screenshare"}),"\n",(0,i.jsxs)(s.p,{children:["To Launch the broadcast extension and call the method ",(0,i.jsx)(s.code,{children:"enableScreenshare()"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-swift",children:"dyteClient.localUser.enableScreenshare()\n"})}),"\n",(0,i.jsx)(s.h3,{id:"stop-the-screenshare",children:"Stop the Screenshare"}),"\n",(0,i.jsxs)(s.p,{children:["To stop the ongoing screenshare and call the method ",(0,i.jsx)(s.code,{children:"disableScreenshare()"}),". This will show the system\r\nalert with a stop button for stopping screen share."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-swift",children:"dyteClient.localUser.disbaleScreenshare()\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.img,{alt:"screenshot",src:n(73720).A+"",width:"590",height:"1280"}),"\r\n",(0,i.jsx)(s.img,{alt:"screenshot",src:n(72788).A+"",width:"3418",height:"1804"})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},56857:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-0-a201a4ac7eaace77756cc6e89ba578c7.png"},1428:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-01-938876034f3e175b56c37e767fda4750.png"},41350:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-03-b0569240a9c0a32a0d453535c193cd17.png"},50608:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-1-4ed0ad6d5ff14cfcf9c1fd7fd93979a4.png"},73720:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-app-267a40a208c4fd0ca2cdd9f65f241788.png"},72788:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-demo-8bca0fa4bcf0188616c9dd85d5c8c2e6.png"},25821:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/ios-setup-info-cbd73ef2ff5ff087e8fb89ae94ca3c93.png"},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);