"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[58245],{9369:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"capabilities/plugins/whiteboard","title":"Plugin: Whiteboard","description":"Whiteboard allows you to write, draw and ideate collaboratively. Built on top of tldraw","source":"@site/docs/guides/capabilities/plugins/whiteboard.mdx","sourceDirName":"capabilities/plugins","slug":"/capabilities/plugins/whiteboard","permalink":"/guides/capabilities/plugins/whiteboard","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/guides/capabilities/plugins/whiteboard.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"frontMatter":{"title":"Plugin: Whiteboard"},"sidebar":"tutorialSidebar","previous":{"title":"Plugin: Streamer","permalink":"/guides/capabilities/plugins/streamer"},"next":{"title":"Polls","permalink":"/guides/capabilities/polls/"}}');var a=i(74848),r=i(28453);const o={title:"Plugin: Whiteboard"},s="Whiteboard",l={},d=[{value:"Saving the whiteboard",id:"saving-the-whiteboard",level:2},{value:"Customization",id:"customization",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Head:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"whiteboard",children:"Whiteboard"})}),"\n",(0,a.jsx)(t.p,{children:"Whiteboard allows you to write, draw and ideate collaboratively. Built on top of tldraw"}),"\n",(0,a.jsx)(t.h2,{id:"saving-the-whiteboard",children:"Saving the whiteboard"}),"\n",(0,a.jsx)(t.p,{children:"You can save the whiteboard from the UI or you can use the API"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const id = 'ae79b269-24ca-4f8a-8112-f96084c8c19a';\r\nconst plugin = meeting.plugins.all.get(id);\r\n\r\nplugin.sendData({\r\n  eventName: 'save-board',\r\n  data: { eventName: 'save-board' },\r\n});\n"})}),"\n",(0,a.jsx)(t.h2,{id:"customization",children:"Customization"}),"\n",(0,a.jsx)(t.p,{children:"You can customization the following parameters:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"follow"}),": Peer ID of the participant you want this user to follow."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"role"}),": The role you want the current user to assume in the plugin. This field can have two values: ",(0,a.jsx)(t.code,{children:"editor"})," , ",(0,a.jsx)(t.code,{children:"viewer"}),". The default value for this field is ",(0,a.jsx)(t.code,{children:"editor"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"autoScale"}),": Scales the user's board to view all content when another user draws on it. The default value for this field is ",(0,a.jsx)(t.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"meeting.participants.on('participantJoined', (participant) => {\r\n  if (participant.id !== '<host-id>') return;\r\n  plugin.sendData({\r\n    eventName: 'config',\r\n    data: {\r\n      eventName: 'config',\r\n      follow: '<participant-id>',\r\n      role: 'viewer',\r\n      autoScale: true,\r\n    },\r\n  });\r\n});\n"})}),"\n",(0,a.jsx)(i,{children:(0,a.jsx)("title",{children:"Plugin: Whiteboard Guide"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>s});var n=i(96540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);