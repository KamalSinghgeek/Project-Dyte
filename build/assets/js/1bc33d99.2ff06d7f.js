"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[67299],{34535:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"livestream","title":"Livestreaming","description":"Introduction","source":"@site/docs/flutter-core/livestream.mdx","sourceDirName":".","slug":"/livestream","permalink":"/flutter-core/livestream","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/livestream.mdx","tags":[{"inline":true,"label":"flutter-core","permalink":"/flutter-core/tags/flutter-core"},{"inline":true,"label":"livestream","permalink":"/flutter-core/tags/livestream"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":7,"frontMatter":{"title":"Livestreaming","sidebar_position":7,"tags":["flutter-core","livestream"]},"sidebar":"tutorialSidebar","previous":{"title":"Receiving chat messages","permalink":"/flutter-core/chat/receiving-chat-messages"},"next":{"title":"Introduction","permalink":"/flutter-core/participants/introduction"}}');var n=r(74848),s=r(28453);const a={title:"Livestreaming",sidebar_position:7,tags:["flutter-core","livestream"]},l=void 0,d={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Properties",id:"properties",level:2},{value:"Playlist URL:",id:"playlist-url",level:3},{value:"Livestream Status:",id:"livestream-status",level:3},{value:"Viewer Count",id:"viewer-count",level:3},{value:"Room Name",id:"room-name",level:3},{value:"Methods",id:"methods",level:2},{value:"Start Livestream",id:"start-livestream",level:3},{value:"Stop Livestream",id:"stop-livestream",level:3},{value:"LivestreamView",id:"livestreamview",level:2},{value:"Events",id:"events",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Livestreaming is often used for events, such as concerts, conferences, and sports games, as well as for online classes, gaming, and social media platforms."}),"\n",(0,n.jsx)(t.li,{children:"Dyte uses LHLS to deliver low latency one way streams."}),"\n",(0,n.jsx)(t.li,{children:"The Interactive Livestream product delivers interactivity via chat, polls, reactions etc."}),"\n",(0,n.jsxs)(t.li,{children:["Viewer can also be pulled in the livestream by the host using Stage Management APIs [ref: ",(0,n.jsx)(t.a,{href:"/flutter-core/stage-management/introduction",children:"here"}),"]."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This section will guide you through the process of integrating the livestreaming feature into your product."}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"playlist-url",children:"Playlist URL:"}),"\n",(0,n.jsxs)(t.p,{children:["Livestream playlist URL is accessible via ",(0,n.jsx)(t.code,{children:"url"})," property of ",(0,n.jsx)(t.code,{children:"DyteLivestreamData"})," instance:"]}),"\n",(0,n.jsxs)(t.p,{children:["If the livestream is not active for current room, it'll return ",(0,n.jsx)(t.code,{children:"null"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"final String? url = dyteClient.livestream.data.url;\n"})}),"\n",(0,n.jsx)(t.h3,{id:"livestream-status",children:"Livestream Status:"}),"\n",(0,n.jsxs)(t.p,{children:["The current livestream status can be accessed from ",(0,n.jsx)(t.code,{children:"state"})," property of the ",(0,n.jsx)(t.code,{children:"DyteLivestreamData"})," instance:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"final DyteLivestreamStatus? status = dyteClient.livestream.data.state;\n"})}),"\n",(0,n.jsx)(t.p,{children:"There can be 6 livestream statuses:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.none"})," : When livestream is not active."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.starting"})," : When livestream is starting."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.started"})," : When livestream is going on."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.ending"})," : When livestream is ending."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.ended"})," : When livestream ended."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.errored"})," : When livestream encountered an error."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"viewer-count",children:"Viewer Count"}),"\n",(0,n.jsxs)(t.p,{children:["The current viewer count for livestream can be accessed via ",(0,n.jsx)(t.code,{children:"viewerCount"}),"property of ",(0,n.jsx)(t.code,{children:"DyteLivestreamData"})," instance."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"final int? viewerCount = dyteClient.livestream.data.viewerCount;\n"})}),"\n",(0,n.jsx)(t.h3,{id:"room-name",children:"Room Name"}),"\n",(0,n.jsxs)(t.p,{children:["The room name of current livestream can be accessed via ",(0,n.jsx)(t.code,{children:"roomName"})," property of ",(0,n.jsx)(t.code,{children:"DyteLivestreamData"})," instance."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"final String? roomName = dyteClient.livestream.data.roomName;\n"})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.p,{children:"Use the following methods to start and stop livestreaming."}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsx)(t.p,{children:"You'll be able to start/stop livestream if your preset allows it."})}),"\n",(0,n.jsx)(t.h3,{id:"start-livestream",children:"Start Livestream"}),"\n",(0,n.jsx)(t.p,{children:"You can start a livestream with the following method:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"dyteClient.livestream.start();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"stop-livestream",children:"Stop Livestream"}),"\n",(0,n.jsx)(t.p,{children:"You can stop a livestream with the following method:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"dyteClient.livestream.stop();\n"})}),"\n",(0,n.jsx)(t.h2,{id:"livestreamview",children:"LivestreamView"}),"\n",(0,n.jsxs)(t.p,{children:["LivestreamView widget returns the view for the current livestream. It takes ",(0,n.jsx)(t.code,{children:"String? url"})," as an argument of the livestream which is accessible via ",(0,n.jsx)(t.code,{children:"dyteMobileClient.livestream.url"})," method or ",(0,n.jsx)(t.code,{children:"Future<String?> getUrl()"})," method on ",(0,n.jsx)(t.code,{children:"DyteLivestream"})," instance, which returns ",(0,n.jsx)(t.code,{children:"null"})," if there's no livestream url."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"final livestreamView = LivestreamView(\r\n  url: dyteMobileClient.livestream.url,\r\n);\r\n\r\n// or\r\n\r\nFuture<Widget> fetchLivestreamView () async {\r\n  String? url = await dyteMobileClient.livestream.getUrl();\r\n  if (url != null) {\r\n    return LivestreamView(\r\n      url: url,\r\n    );\r\n  } else {\r\n    return Container();\r\n  }\r\n\r\n  final livestreamView = await fetchLivestreamView();\r\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,n.jsx)(t.p,{children:"You need to subscribe to LivestreamEventListener to be able to listen livestream events. You can do it as follows:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"class LivestreamListener implements DyteLivestreamEventsListener{\r\n  ...\r\n  void onLiveStreamStateUpdate(DyteLivestreamData data) {\r\n    // Handle livestream state update\r\n  }\r\n  ...\r\n}\r\n\r\ndyteClient.addLivestreamEventsListener(LivestreamListener());\n"})}),"\n",(0,n.jsx)(t.p,{children:"Here are a list of events the livestream listener emits:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Event"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Description"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamStateUpdate"})}),(0,n.jsx)(t.td,{children:"Emitted when a livestream state is updated. It contains the updated livestream state in the payload."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onViewerCountUpdated"})}),(0,n.jsx)(t.td,{children:"Emitted when a viewer count of a livestream is updated. It contains the updated viewer count in the payload."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onStageCountUpdated"})}),(0,n.jsx)(t.td,{children:"Emitted when a participants on stage changes. It contains the updated viewer count in the payload."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamStarting"})}),(0,n.jsxs)(t.td,{children:["Emitted when livestream state is updated to ",(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.Starting"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamStarted"})}),(0,n.jsxs)(t.td,{children:["Emitted when livestream state is updated to ",(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.Started"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamEnding"})}),(0,n.jsxs)(t.td,{children:["Emitted when livestream state is updated to ",(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.Ending"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamEnded"})}),(0,n.jsxs)(t.td,{children:["Emitted when livestream state is updated to ",(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.Ended"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onLiveStreamErrored"})}),(0,n.jsxs)(t.td,{children:["Emitted when livestream state is updated to ",(0,n.jsx)(t.em,{children:"DyteLivestreamStatus.Errored"})]})]})]})]}),"\n",(0,n.jsx)(r,{children:(0,n.jsx)("title",{children:"Flutter Core Livestreaming"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var i=r(96540);const n={},s=i.createContext(n);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);