"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[6311],{96675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"chat/introduction","title":"Introducing chat","description":"Send and receive chat messages in a meeting.","source":"@site/docs/web-core/chat/introduction.mdx","sourceDirName":"chat","slug":"/chat/introduction","permalink":"/web-core/chat/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/web-core/chat/introduction.mdx","tags":[{"inline":true,"label":"web-core","permalink":"/web-core/tags/web-core"},{"inline":true,"label":"chat","permalink":"/web-core/tags/chat"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":1,"frontMatter":{"title":"Introducing chat","description":"Send and receive chat messages in a meeting.","sidebar_position":1,"tags":["web-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Permissions","permalink":"/web-core/participants/permissions"},"next":{"title":"Sending a chat message","permalink":"/web-core/chat/sending-a-chat-message"}}');var r=t(74848),i=t(28453);const a={title:"Introducing chat",description:"Send and receive chat messages in a meeting.",sidebar_position:1,tags:["web-core","chat"]},c="Introducing chat",o={},d=[];function h(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introducing-chat",children:"Introducing chat"})}),"\n",(0,r.jsxs)(n.p,{children:["The meeting chat object is stored in ",(0,r.jsx)(n.code,{children:"meeting.chat"}),", which has methods for\r\nsending and receiving messages. There are 3 types of messages that can be sent\r\nin chat - text messages, images, and files."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"meeting.chat.messages"})," array contains all the messages that have been sent\r\nin the chat. This is an array of objects, where each object is of type\r\n",(0,r.jsx)(n.code,{children:"Message"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The type ",(0,r.jsx)(n.code,{children:"Message"})," is defined in the following manner."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface BaseMessage<T extends MessageType> {\r\n  type: T;\r\n  userId: string;\r\n  displayName: string;\r\n  time: Date;\r\n  id: string;\r\n  isEdited?: boolean;\r\n  read?: boolean;\r\n  pluginId?: string;\r\n  pinned?: boolean;\r\n  targetUserIds?: string[];\r\n}\r\n\r\ninterface TextMessage extends BaseMessage<MessageType.text> {\r\n  message: string;\r\n}\r\n\r\ninterface ImageMessage extends BaseMessage<MessageType.image> {\r\n  link: string;\r\n}\r\n\r\ninterface FileMessage extends BaseMessage<MessageType.file> {\r\n  name: string;\r\n  size: number;\r\n  link: string;\r\n}\r\n\r\ntype Message = TextMessage | ImageMessage | FileMessage;\n"})}),"\n",(0,r.jsx)(t,{children:(0,r.jsx)("title",{children:"Web Core Introducing chat"})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);