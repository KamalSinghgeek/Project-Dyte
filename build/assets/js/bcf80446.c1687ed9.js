"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[98378],{54381:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"plugins/extra","title":"Other methods","description":"Methods on a plugin in a meeting.","source":"@site/docs/ios-core/plugins/extra.mdx","sourceDirName":"plugins","slug":"/plugins/extra","permalink":"/ios-core/plugins/extra","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/ios-core/plugins/extra.mdx","tags":[{"inline":true,"label":"ios-core","permalink":"/ios-core/tags/ios-core"},{"inline":true,"label":"plugins","permalink":"/ios-core/tags/plugins"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":4,"frontMatter":{"title":"Other methods","description":"Methods on a plugin in a meeting.","sidebar_position":4,"tags":["ios-core","plugins"]},"sidebar":"tutorialSidebar","previous":{"title":"Functions to disable plugins","permalink":"/ios-core/plugins/disable-plugin"},"next":{"title":"Recording","permalink":"/ios-core/recording"}}');var o=t(74848),r=t(28453);const s={title:"Other methods",description:"Methods on a plugin in a meeting.",sidebar_position:4,tags:["ios-core","plugins"]},l=void 0,a={},d=[{value:"Send data to the plugin",id:"send-data-to-the-plugin",level:2},{value:"Receive data from the plugin",id:"receive-data-from-the-plugin",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"send-data-to-the-plugin",children:"Send data to the plugin"}),"\n",(0,o.jsxs)(n.p,{children:["You can send data (type ",(0,o.jsx)(n.code,{children:"any"}),") to a plugin using the ",(0,o.jsx)(n.code,{children:"sendData()"})," method. This method comes in handy when building your own plugin."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",children:'let pluginId = "..."\r\nif let plugin = meeting.plugins.active.first(where: { $0.id == pluginId }) {\r\n    plugin.sendData(eventName: "my-custom-event", data: "Hello world")\r\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"receive-data-from-the-plugin",children:"Receive data from the plugin"}),"\n",(0,o.jsxs)(n.p,{children:["You can receive data from a plugin by implementing the methods defined in ",(0,o.jsx)(n.code,{children:"DytePluginEventsListener"})," interface.\r\nThis method comes in handy when building your own plugin. Listen Plugin events\r\nusing ",(0,o.jsx)(n.code,{children:"meeting.addPluginEventsListener(meetingViewModel)"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",children:"extension MeetingViewModel: DytePluginEventsListener {\r\n  func onPluginActivated(plugin: DytePlugin) {\r\n    ...\r\n  }\r\n\r\n  func onPluginDeactivated(plugin: DytePlugin) {\r\n    ...\r\n  }\r\n\r\n  func onPluginMessage(plugin: DytePlugin, eventName: String, data: Any?) {\r\n    ...\r\n  }\r\n\r\n  func onPluginFileRequest(plugin: DytePlugin) {\r\n    ...\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(t,{children:(0,o.jsx)("title",{children:"iOS Core extra plugins Function"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);