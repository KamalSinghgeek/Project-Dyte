"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[4274],{88675:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"build-in-call-ui/default-meeting-ui","title":"DyteMeeting","description":"Dyte provides, DyteMeeting an all encompassing component that internally handles everything from showing a pre-call UI to in-call UI and post-call screen.","source":"@site/docs/rn-ui-kit/build-in-call-ui/default-meeting-ui.mdx","sourceDirName":"build-in-call-ui","slug":"/build-in-call-ui/default-meeting-ui","permalink":"/react-native/build-in-call-ui/default-meeting-ui","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/rn-ui-kit/build-in-call-ui/default-meeting-ui.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":1,"frontMatter":{"title":"DyteMeeting","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Audio/video - Device Selection","permalink":"/react-native/build-pre-call-ui/build-your-own/add-audio-video-device"},"next":{"title":"Handling States and Configs","permalink":"/react-native/build-in-call-ui/build-your-own/handling-states-and-configs"}}');var r=n(74848),o=n(28453);const l={title:"DyteMeeting",sidebar_position:1},a=void 0,s={},c=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Dyte provides, ",(0,r.jsx)(t.code,{children:"DyteMeeting"})," an all encompassing component that internally handles everything from showing a pre-call UI to in-call UI and post-call screen."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"<DyteMeeting meeting={meeting} showSetupScreen={true} />\n"})}),"\n",(0,r.jsx)(t.p,{children:"This component contains pre-call, in-call UI as well post-call UIs."}),"\n",(0,r.jsxs)(t.p,{children:["Following code shows a basic split of these UIs from the ",(0,r.jsx)(t.code,{children:"DyteMeeting"})," component."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import {\r\n  DyteSetupScreen,\r\n  DyteEndedScreen,\r\n  DyteHeader,\r\n  DyteParticipantsAudio,\r\n  DyteDialogManager,\r\n  DyteStage,\r\n  DyteGrid,\r\n  DyteNotifications,\r\n  DyteSidebar,\r\n  DyteControlbar,\r\n} from '@dytesdk/react-ui-kit';\r\nimport { useDyteMeeting, useDyteSelector } from '@dytesdk/react-web-core';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function MyMeeting() {\r\n  const { meeting } = useDyteMeeting();\r\n  const roomState = useDyteSelector((m) => m.self.roomState);\r\n\r\n  return (\r\n    <View className=\"flex h-full w-full\">\r\n      {roomState === 'init' && <DyteSetupScreen meeting={meeting} />}\r\n      {roomState === 'joined' && (\r\n        <View className=\"flex h-full w-full flex-col\">\r\n          <View>\r\n            <DyteHeader meeting={meeting} />\r\n          </View>\r\n\r\n          <View\r\n            className=\"flex w-full flex-1 items-center justify-center\"\r\n            style={{\r\n              backgroundColor: '#272727',\r\n              color: '#ffffff',\r\n            }}\r\n          >\r\n            <DyteText>Custom in-call UI</DyteText>\r\n            <DyteDialogManager meeting={meeting} />\r\n          </View>\r\n\r\n          <View className=\"flex w-full overflow-visible\">\r\n            <DyteControlbar meeting={meeting} />\r\n          </View>\r\n        </View>\r\n      )}\r\n      {roomState === 'ended' && <DyteEndedScreen meeting={meeting} />}\r\n    </View>\r\n  );\r\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Since ",(0,r.jsx)(t.code,{children:"DyteMeeting"})," is a complex component and provides a lot more than just the UI, let's go to the next page and start splitting it to uncover what it does."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);