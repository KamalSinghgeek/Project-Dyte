"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[9035],{34956:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"plugins/introduction","title":"Introduction","description":"Manage plugins in a meeting.","source":"@site/docs/android/plugins/introduction.mdx","sourceDirName":"plugins","slug":"/plugins/introduction","permalink":"/android/plugins/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/android/plugins/introduction.mdx","tags":[{"inline":true,"label":"android-ui-kit","permalink":"/android/tags/android-ui-kit"},{"inline":true,"label":"plugins","permalink":"/android/tags/plugins"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":1,"frontMatter":{"title":"Introduction","description":"Manage plugins in a meeting.","sidebar_position":1,"tags":["android-ui-kit","plugins"]},"sidebar":"tutorialSidebar","previous":{"title":"Prebuilt","permalink":"/android/participants/prebuilt"},"next":{"title":"Prebuilt","permalink":"/android/plugins/prebuilt"}}');var r=i(74848),s=i(28453);const l={title:"Introduction",description:"Manage plugins in a meeting.",sidebar_position:1,tags:["android-ui-kit","plugins"]},o="Introduction",a={},d=[];function c(n){const e={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsxs)(e.p,{children:["Plugins are one-click add-ons that can make your meetings more immersive and collaborative. Dyte provides a bunch of inbuilt plugins to choose from, you can also build your own plugins using the ",(0,r.jsx)(e.a,{href:"../../plugin-sdk/",children:"Plugin SDK"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["The meeting plugins can be accessed from the ",(0,r.jsx)(e.code,{children:"meeting.plugins"})," object, it exposes the following."]}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Property"}),(0,r.jsx)(e.th,{children:"Type"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"active"}),(0,r.jsx)(e.td,{children:"List"}),(0,r.jsx)(e.td,{children:"All plugins that are currently in use."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"all"}),(0,r.jsx)(e.td,{children:"List"}),(0,r.jsx)(e.td,{children:"All plugins the meeting has access to."})]})]})]}),"\n",(0,r.jsxs)(e.p,{children:["Each plugin in the list is of type ",(0,r.jsx)(e.code,{children:"DytePlugin"})," which has the following public fields and methods:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-kotlin",children:"class DytePlugin {\r\n    val id: String\r\n    val name: String\r\n    val description: String\r\n    val picture: String\r\n    val isPrivate: Boolean\r\n    val staggered: Boolean\r\n    val baseURL: String\r\n    val config: PluginConfig\r\n    val isActive: Boolean\r\n    val enabledBy: String?\r\n\r\n    fun activate()\r\n    fun deactivate()\r\n    fun getPluginView(): WebView\r\n    fun uploadFile(file: DytePluginFile)\r\n    fun sendData(eventName: String, data: Any?)\r\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>o});var t=i(96540);const r={},s=t.createContext(r);function l(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);