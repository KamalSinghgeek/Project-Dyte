"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[91347],{71953:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"display-videos","title":"Render participant videos","description":"To display the videos of all participants you need to show on the screen, you","source":"@site/docs/rn-ui-kit/display-videos.mdx","sourceDirName":".","slug":"/basics/display-videos","permalink":"/react-native/basics/display-videos","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/rn-ui-kit/display-videos.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8,"slug":"/basics/display-videos"},"sidebar":"tutorialSidebar","previous":{"title":"Add custom sidebar","permalink":"/react-native/build-in-call-ui/build-your-own/add-custom-sidebar"},"next":{"title":"Gallery","permalink":"/react-native/components"}}');var r=i(74848),s=i(28453);const d={sidebar_position:8,slug:"/basics/display-videos"},a="Render participant videos",c={},l=[{value:"Render each participant manually",id:"render-each-participant-manually",level:2},{value:"Grid Components",id:"grid-components",level:2},{value:"Parent Grid Component",id:"parent-grid-component",level:4},{value:"Normal Grid Components",id:"normal-grid-components",level:4},{value:"DyteSimpleGrid",id:"dytesimplegrid",level:5},{value:"DyteSimpleGrid",id:"dytesimplegrid-1",level:5},{value:"DyteMixedGrid",id:"dytemixedgrid",level:5},{value:"Example for SimpleGrid",id:"example-for-simplegrid",level:5}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"render-participant-videos",children:"Render participant videos"})}),"\n",(0,r.jsx)(n.p,{children:"To display the videos of all participants you need to show on the screen, you\r\ncan either render each participant tile manually or choose from our pre built\r\nvideo tile grid components"}),"\n",(0,r.jsx)(n.h2,{id:"render-each-participant-manually",children:"Render each participant manually"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function Meeting() {\r\n  const { meeting } = useDyteMeeting();\r\n  const activeParticipants = useDyteSelector(\r\n    (meeting) => meeting.participants.active\r\n  );\r\n\r\n  function ParticipantTile({ participant, meeting }) {\r\n    return (\r\n      <DyteParticipantTile\r\n        participant={participant}\r\n        style={{\r\n          width: 240,\r\n          height: 480,\r\n        }}\r\n      >\r\n        <DyteNameTag participant={participant} meeting={meeting}>\r\n          <DyteAudioVisualizer participant={participant} />\r\n        </DyteNameTag>\r\n        <DyteAvatar size=\"sm\" participant={participant} />\r\n      </DyteParticipantTile>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        gap: '1rem',\r\n      }}\r\n    >\r\n      {activeParticipants.toArray().map((participant) => (\r\n        <ParticipantTile participant={participant} meeting={meeting} />\r\n      ))}\r\n    </View>\r\n  );\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"But in the real world, a video tile grid is more complex, it is responsive, tile\r\nsizes are dynamic, there are different layouts, the grid handles screensharing\r\netc."}),"\n",(0,r.jsx)(n.p,{children:"Dyte has ready to use grid components, that you can use out of the box"}),"\n",(0,r.jsx)(n.h2,{id:"grid-components",children:"Grid Components"}),"\n",(0,r.jsx)(n.p,{children:"There are two types of grid components, so that the grid can be easily extended\r\nand modularized."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Parent Grid component - ",(0,r.jsx)(n.code,{children:"DyteGrid"})]}),"\n",(0,r.jsxs)(n.li,{children:["Child Grid components each having a different layour - ",(0,r.jsx)(n.code,{children:"DyteSimpleGrid"}),",\r\n",(0,r.jsx)(n.code,{children:"DyteMixedGrid"}),", ",(0,r.jsx)(n.code,{children:"DyteSpotlightGrid"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"parent-grid-component",children:"Parent Grid Component"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"DyteGrid"})," component is a monolith component which handles all grid related\r\nevents and data on it's own and passes the following props to it's children."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Prop"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"participants[]"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Active Participants"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"pinnedParticipants[]"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Pinned Participants"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"screenShareParticipants[]"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Participants who are screen sharing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"plugins[]"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Active Plugins"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"These props are passed to it's children which it computes from the UI Config\r\nwhich is passed to it. By default it will use the default UI Config."}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Try editing the ",(0,r.jsx)(n.code,{children:"aspectRatio"})," and ",(0,r.jsx)(n.code,{children:"gap"})," props."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function Example() {\r\n  const { meeting } = useDyteMeeting();\r\n\r\n  return (\r\n    <View style={{ width: \'100%\', height: \'400px\' }}>\r\n      <DyteGrid meeting={meeting} aspectRatio="16:9" gap="8" size="sm" />\r\n    </View>\r\n  );\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"normal-grid-components",children:"Normal Grid Components"}),"\n",(0,r.jsx)(n.p,{children:"These components just accept the props mentioned above and render the UI."}),"\n",(0,r.jsx)(n.p,{children:"Read more about them in their Reference pages."}),"\n",(0,r.jsx)(n.h5,{id:"dytesimplegrid",children:"DyteSimpleGrid"}),"\n",(0,r.jsxs)(n.p,{children:["Accepts: ",(0,r.jsx)(n.code,{children:"participants"}),", ",(0,r.jsx)(n.code,{children:"pinnedParticipants"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["This grid renders just the ParticipantTiles of the participants you pass to it.\r\nIt also brings ",(0,r.jsx)(n.code,{children:"pinnedParticipants"})," to the start of the grid."]}),"\n",(0,r.jsx)(n.h5,{id:"dytesimplegrid-1",children:"DyteSimpleGrid"}),"\n",(0,r.jsxs)(n.p,{children:["Accepts: ",(0,r.jsx)(n.code,{children:"participants"}),", ",(0,r.jsx)(n.code,{children:"pinnedParticipants"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This grid renders the ParticipantTiles of the participants and\r\npinnedParticipants in separate grids."}),"\n",(0,r.jsx)(n.p,{children:"Pinned participants are in spotlight area, i.e; larger grid."}),"\n",(0,r.jsx)(n.h5,{id:"dytemixedgrid",children:"DyteMixedGrid"}),"\n",(0,r.jsxs)(n.p,{children:["Accepts: ",(0,r.jsx)(n.code,{children:"participants"}),", ",(0,r.jsx)(n.code,{children:"pinnedParticipants"}),", ",(0,r.jsx)(n.code,{children:"screenShareParticipants"}),",\r\n",(0,r.jsx)(n.code,{children:"plugins"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This grid renders screenshares as well as plugins in the main larger view and\r\nrenders a smaller grid on the right side which is configurable via the UI\r\nConfig. You can use SimleGrid or SpotlightGrid here."}),"\n",(0,r.jsxs)(n.p,{children:["If you just want to render ",(0,r.jsx)(n.code,{children:"self"})," twice in a SimpleGrid:"]}),"\n",(0,r.jsx)(n.h5,{id:"example-for-simplegrid",children:"Example for SimpleGrid"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function Example() {\r\n  const { meeting } = useDyteMeeting();\r\n  const [count, setCount] = useState(2);\r\n\r\n  if (!meeting) return null;\r\n\r\n  const add = () => setCount((count) => count + 1);\r\n  const remove = () => count > 1 && setCount((count) => count - 1);\r\n\r\n  const participants = new Array(count).fill(meeting.self);\r\n\r\n  return (\r\n    <View>\r\n      <View\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          gap: '12px',\r\n        }}\r\n      >\r\n        <DyteButton onClick={add}>Add</DyteButton>\r\n        <DyteButton variant=\"danger\" onClick={remove}>\r\n          Remove\r\n        </DyteButton>\r\n      </View>\r\n      <View style={{ width: '100%', height: '400px' }}>\r\n        <DyteSimpleGrid\r\n          aspectRatio=\"16:9\"\r\n          gap=\"8\"\r\n          participants={participants}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\n"})}),"\n",(0,r.jsx)(i,{children:(0,r.jsx)("title",{children:"React UI Kit Render participant videos"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var t=i(96540);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);