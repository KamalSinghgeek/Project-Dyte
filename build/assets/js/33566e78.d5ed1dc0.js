"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[7738],{20926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"participants/participant-object","title":"Participant Object","description":"Understand the participant object and its integration in Flutter. Follow Dyte\'s documentation for effective implementation in your app.","source":"@site/docs/flutter-core/participants/participant-object.mdx","sourceDirName":"participants","slug":"/participants/participant-object","permalink":"/flutter-core/participants/participant-object","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/participants/participant-object.mdx","tags":[{"inline":true,"label":"flutter-core","permalink":"/flutter-core/tags/flutter-core"},{"inline":true,"label":"participants","permalink":"/flutter-core/tags/participants"},{"inline":true,"label":"participant","permalink":"/flutter-core/tags/participant"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":2,"frontMatter":{"title":"Participant Object","description":"Understand the participant object and its integration in Flutter. Follow Dyte\'s documentation for effective implementation in your app.","sidebar_position":2,"tags":["flutter-core","participants","participant"]},"sidebar":"tutorialSidebar","previous":{"title":"Participant Types","permalink":"/flutter-core/participants/"},"next":{"title":"Participant Events","permalink":"/flutter-core/participants/events"}}');var r=n(74848),a=n(28453);const o={title:"Participant Object",description:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app.",sidebar_position:2,tags:["flutter-core","participants","participant"]},c="The Participant object",s={},d=[{value:"Audio/Video updates for participant",id:"audiovideo-updates-for-participant",level:2},{value:"Host controls methods",id:"host-controls-methods",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"the-participant-object",children:"The Participant object"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"DyteMeetingParticipant"})," object consists of all the information related to a\r\nparticular participant. For instance, it contains a participants\r\nvideo/audio/screenshare stream, and the participant's name. It also contains\r\nstate variables that indicate whether a participant's camera is on or off, and\r\nwhether they are muted or unmuted."]}),"\n",(0,r.jsx)(t.p,{children:"The participant object has the following properties."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"id"}),": The ",(0,r.jsx)(t.code,{children:"participantId"})," of the participant (aka ",(0,r.jsx)(t.code,{children:"peerId"}),")."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"userId"}),": The ",(0,r.jsx)(t.code,{children:"userId"})," of the participant."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"name"}),": Contains participant's name."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"picture"}),": Contains participant's picture (if any)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"isHost"}),": Boolean value indicating whether this user is host of current\r\nmeeting or not."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"clientSpecificId"}),": Arbitrary ID that can be set to identify the participant."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"videoEnabled"}),": Set to true if the participant's camera is on."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"audioEnabled"}),": Set to true if the participant is unmuted."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"You can subscribe to various participants events. For subscribing:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Implement ",(0,r.jsx)(t.code,{children:"DyteParticipantEventsListener"})," to a class say\r\n",(0,r.jsx)(t.code,{children:"ParticipantEventListener"}),", and listen to event from\r\n",(0,r.jsx)(t.code,{children:"DyteParticipantEventsListener"})," by overriding them. This class can be user to\r\nmanage your state in the application."]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-dart",children:"class ParticipantEventListener extends DyteParticipantEventsListener {\r\n\r\n  @override\r\n  void onAudioUpdate({\r\n    required bool audioEnabled,\r\n    required DyteJoinedMeetingParticipant participant,\r\n  }) {\r\n    /// handle audioUpdate of `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n  @override\r\n  void onActiveSpeakerChanged(DyteJoinedMeetingParticipant participant) {\r\n    /// handle active speaker changing to `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n  @override\r\n  void onNoActiveSpeaker() {\r\n    /// handle no active speaker\r\n  }\r\n\r\n  @override\r\n  void onParticipantPinned(DyteJoinedMeetingParticipant participant) {\r\n    /// handle pinning of `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n\r\n  @override\r\n  void onParticipantUnpinned(DyteJoinedMeetingParticipant participant) {\r\n    /// handle unpinning the pinned participant\r\n  }\r\n\r\n  @override\r\n  void onScreenShareStarted(DyteJoinedMeetingParticipant participant) {\r\n    /// handle screen share started of `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n  @override\r\n  void onScreenShareEnded(DyteJoinedMeetingParticipant participant) {\r\n    /// handle screen share ended of `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n  @override\r\n  void onVideoUpdate({\r\n    required bool videoEnabled,\r\n    required DyteJoinedMeetingParticipant participant,\r\n  }) {\r\n    /// handle videoUpdate of `DyteJoinedMeetingParticipant` participant\r\n  }\r\n\r\n}\n"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Now to subscribe, pass the instance of ",(0,r.jsx)(t.code,{children:"DyteParticipantEventsListener"})," class\r\ncreated above to ",(0,r.jsx)(t.code,{children:"addParticipantEventsListener()"})," method of ",(0,r.jsx)(t.code,{children:"dyteClient"}),"\r\ninstance as follows:"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-dart",metastring:"{2}",children:"dyteClient.addParticipantEventsListener(ParticipantEventListener());\n"})}),"\n",(0,r.jsx)(t.h2,{id:"audiovideo-updates-for-participant",children:"Audio/Video updates for participant"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-dart",children:"\r\n...\r\n\r\n@override\r\nvoid onVideoUpdate(bool videoEnabled) {\r\n  if (videoEnabled) {\r\n      // video is enabled, and other participants in room can see local user\r\n    } else {\r\n      // video is disabled, and other participants in room can not see local user.\r\n    }\r\n}\r\n\r\n@override\r\nvoid onAudioUpdate({\r\n  required bool audioEnabled,\r\n  required DyteJoinedMeetingParticipant participant,\r\n}) {\r\n    if (audioEnabled) {\r\n      // audio is enabled, and other participants in room can hear local user\r\n    } else {\r\n      // audio is disabled, and other participants in room can not hear local user.\r\n    }\r\n}\r\n\r\n...\r\n\n"})}),"\n",(0,r.jsx)(t.h2,{id:"host-controls-methods",children:"Host controls methods"}),"\n",(0,r.jsx)(t.p,{children:"If you (the local user) have the relevant permissions in the meeting, you can\r\ndisable a participant's video/audio streams, or even remove them from the\r\nmeeting."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-dart",children:"final participant = meeting.participants.joined.first;\r\n\r\n// To disable a participant's video stream\r\nparticipant.disableVideo();\r\n\r\n// To disable a participant's audio stream\r\nparticipant.disableAudio();\r\n\r\n// To kick a participant from the meeting\r\nparticipant.kick();\r\n\r\n// to pin a participant in a meeting\r\nparticipant.pin();\r\n\n"})}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("title",{children:"Flutter Core The participant object"}),(0,r.jsx)("meta",{name:"description",content:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app."})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const r={},a=i.createContext(r);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);