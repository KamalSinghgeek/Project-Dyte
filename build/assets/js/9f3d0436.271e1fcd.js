"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[13748],{96648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"polls/introduction","title":"Introduction","description":"Learn the fundamentals of integrating polls into your Android application with Dyte\'s Polls Introduction guide.","source":"@site/docs/android-core/polls/introduction.mdx","sourceDirName":"polls","slug":"/polls/introduction","permalink":"/android-core/polls/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/android-core/polls/introduction.mdx","tags":[{"inline":true,"label":"android-core","permalink":"/android-core/tags/android-core"},{"inline":true,"label":"polls","permalink":"/android-core/tags/polls"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":1,"frontMatter":{"title":"Introduction","description":"Learn the fundamentals of integrating polls into your Android application with Dyte\'s Polls Introduction guide.","sidebar_position":1,"tags":["android-core","polls"]},"sidebar":"tutorialSidebar","previous":{"title":"Livestream Event Listeners","permalink":"/android-core/livestream/dyte-livestream-listener"},"next":{"title":"Creating a poll","permalink":"/android-core/polls/creating-a-poll"}}');var i=t(74848),l=t(28453);const r={title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with Dyte's Polls Introduction guide.",sidebar_position:1,tags:["android-core","polls"]},s="Introduction",a={},d=[{value:"Listening to new polls in a meeting",id:"listening-to-new-polls-in-a-meeting",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsxs)(n.p,{children:["The meetings polls object can be accessed using ",(0,i.jsx)(n.code,{children:"meeting.polls"}),". It provides\r\nmethods to create polls, vote, and more."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where\r\neach element is an object of type ",(0,i.jsx)(n.code,{children:"DytePollMessage"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"data class DytePollMessage(\r\n  val id: String,\r\n  val question: String,\r\n  val anonymous: Boolean,\r\n  val hideVotes: Boolean,\r\n  val createdBy: String,\r\n  val options: List<DytePollOption>,\r\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The type ",(0,i.jsx)(n.code,{children:"DytePollMessage"})," represents a poll in a Dyte meeting. It also\r\ncontains list of ",(0,i.jsx)(n.code,{children:"DytePollOption"})," which are options for a given poll. And every\r\n",(0,i.jsx)(n.code,{children:"DytePollOption"})," has list of votes inside of it. Votes are objects of class\r\n",(0,i.jsx)(n.code,{children:"DytePollVote"})," which internally has id and name of the vote."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"data class DytePollOption(\r\n  val text: String,\r\n  val votes: List<DytePollVote>,\r\n  val count: Int\r\n)\r\n\r\ndata class DytePollVote(\r\n  val id: String,\r\n  val name: String\r\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["One can easily create, vote and view polls by listening to callbacks on\r\n",(0,i.jsx)(n.code,{children:"meeting"})," object."]}),"\n",(0,i.jsx)(n.h2,{id:"listening-to-new-polls-in-a-meeting",children:"Listening to new polls in a meeting"}),"\n",(0,i.jsxs)(n.p,{children:["To be able to receive new poll messages you need to implement a method\r\n",(0,i.jsx)(n.code,{children:"onPollUpdates()"})," method from callback ",(0,i.jsx)(n.code,{children:"DyteMeetingRoomEventsListener"}),". You can\r\nsubscribe to this events by calling\r\n",(0,i.jsx)(n.code,{children:"meeting.addMeetingEventsListener(dyteMeetingRoomEventsListener)"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object :\r\n  DyteMeetingRoomEventsListener {\r\n    override fun onNewPoll(poll: DytePollMessage) {\r\n      // code to handle new poll\r\n    }\r\n\r\n    override fun onPollUpdates(pollMessages: List<DytePollMessage>) {\r\n      // code to handle polls and their vote updates.\r\n    }\r\n  })\n"})}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)("title",{children:"Android Core Polls Introduction"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},l=o.createContext(i);function r(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);