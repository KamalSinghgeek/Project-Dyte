"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[29973],{59089:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"chat/sending-a-chat-message","title":"Sending a chat message","description":"Send a chat message in a meeting.","source":"@site/docs/rn-core/chat/sending-a-chat-message.mdx","sourceDirName":"chat","slug":"/chat/sending-a-chat-message","permalink":"/rn-core/chat/sending-a-chat-message","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/rn-core/chat/sending-a-chat-message.mdx","tags":[{"inline":true,"label":"rn-core","permalink":"/rn-core/tags/rn-core"},{"inline":true,"label":"chat","permalink":"/rn-core/tags/chat"}],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":2,"frontMatter":{"title":"Sending a chat message","description":"Send a chat message in a meeting.","sidebar_position":2,"tags":["rn-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Introducing chat","permalink":"/rn-core/chat/introduction"},"next":{"title":"Receiving chat messages","permalink":"/rn-core/chat/receiving-chat-messages"}}');var a=s(74848),i=s(28453);const r={title:"Sending a chat message",description:"Send a chat message in a meeting.",sidebar_position:2,tags:["rn-core","chat"]},c="Sending a chat message",d={},o=[{value:"Send a text message",id:"send-a-text-message",level:2},{value:"Send an image",id:"send-an-image",level:2},{value:"Send a file",id:"send-a-file",level:2},{value:"Extra",id:"extra",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Head:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"sending-a-chat-message",children:"Sending a chat message"})}),"\n",(0,a.jsxs)(n.p,{children:["As mentioned in ",(0,a.jsx)(n.a,{href:"./introduction",children:"introduction"}),", there are 3 types of chat\r\nmessages - text messages, images, and files. There is a method in ",(0,a.jsx)(n.code,{children:"meeting.chat"}),"\r\nto send a message of each type."]}),"\n",(0,a.jsx)(n.h2,{id:"send-a-text-message",children:"Send a text message"}),"\n",(0,a.jsxs)(n.p,{children:["To send a text message, the ",(0,a.jsx)(n.code,{children:"meeting.chat.sendTextMessage()"})," method can be used.\r\nThis accepts a string ",(0,a.jsx)(n.code,{children:"message"})," and sends it to the room."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const message = 'Is this the real life?';\r\nawait meeting.chat.sendTextMessage(message);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"send-an-image",children:"Send an image"}),"\n",(0,a.jsxs)(n.p,{children:["You can send an image with the help of ",(0,a.jsx)(n.code,{children:"meeting.chat.sendImageMessage()"}),". This\r\naccepts an image of type ",(0,a.jsx)(n.code,{children:"File"}),", and sends it to the participants in the\r\nmeeting."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"async function onSendImage() {\r\n  // Get the image uri and create an object with the following fields\r\n  const res = await DocumentPicker.pickSingle({\r\n    type: [DocumentPicker.types.images],\r\n  });\r\n  const image = {\r\n    uri: res.uri,\r\n    name: res.name,\r\n    size: res.size,\r\n    type: res.type,\r\n  };\r\n  await meeting.chat.sendImageMessage(image);\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"send-a-file",children:"Send a file"}),"\n",(0,a.jsxs)(n.p,{children:["Sending a file is quite similar to sending an image. The only difference is that\r\nwhen you send an image, a preview will be shown in the meeting chat, which is\r\nnot the case for sending files. That being said, an image can be sent as a file\r\ntoo using ",(0,a.jsx)(n.code,{children:"meeting.chat.sendFileMessage()"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"async function onSendFile() {\r\n  // Get the file uri and create an object with the following fields\r\n  const res = await DocumentPicker.pickSingle({\r\n    type: [DocumentPicker.types.allFiles],\r\n  });\r\n  const file = {\r\n    uri: res.uri,\r\n    name: res.name,\r\n    size: res.size,\r\n    type: res.type,\r\n  };\r\n  await meeting.chat.sendFileMessage(file);\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"extra",children:"Extra"}),"\n",(0,a.jsxs)(n.p,{children:["There is also a common method called ",(0,a.jsx)(n.code,{children:"meeting.chat.sendMessage()"})," that can be\r\nused to send any of the 3 types of messages displayed above. It essentially\r\ncalls one of the methods from above depending upon the type of payload you send\r\nto the method. The ",(0,a.jsx)(n.code,{children:"sendMessage()"})," method accepts a parameter ",(0,a.jsx)(n.code,{children:"message"})," of the\r\nfollowing type:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"async function sendMessage(\r\n    message: { type: 'text', message: string }\r\n        | { type: 'image', image: File }\r\n        | { type: 'file', file: File },\r\n) {...}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Here's how you would use the ",(0,a.jsx)(n.code,{children:"sendMessage()"})," method to send a text message."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const message = 'Is this just fantasy?';\r\nawait meeting.chat.sendMessage({ type: 'text', message });\n"})}),"\n",(0,a.jsx)(s,{children:(0,a.jsx)("title",{children:"React Native Core Sending a chat message"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(96540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);