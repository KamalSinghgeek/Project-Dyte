"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[87198],{26530:(t,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>e,toc:()=>p});const e=JSON.parse('{"id":"participants/prebuilt","title":"Prebuilt","description":"This section explains how to list and manage participants in your Dyte app.","source":"@site/docs/android/participants/prebuilt.mdx","sourceDirName":"participants","slug":"/participants/prebuilt","permalink":"/android/participants/prebuilt","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/android/participants/prebuilt.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":3,"frontMatter":{"title":"Prebuilt","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Types","permalink":"/android/participants/introduction"},"next":{"title":"Introduction","permalink":"/android/plugins/introduction"}}');var r=i(74848),a=i(28453);const s={title:"Prebuilt",sidebar_position:3},o="Manage Participants",c={},p=[{value:"Listing Participants",id:"listing-participants",level:2},{value:"Host Controls",id:"host-controls",level:2}];function l(t){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"manage-participants",children:"Manage Participants"})}),"\n",(0,r.jsx)(n.p,{children:"This section explains how to list and manage participants in your Dyte app."}),"\n",(0,r.jsx)(n.h2,{id:"listing-participants",children:"Listing Participants"}),"\n",(0,r.jsxs)(n.p,{children:["To show the list of participants in your app, you can use the ",(0,r.jsx)(n.code,{children:"DyteParticipantsFragment"})," class."]}),"\n",(0,r.jsx)(n.p,{children:"You can create an instance of this class and call the show method to display the list of current participants as shown below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val dyteParticipantsFragment = DyteParticipantsFragment()\r\ndyteParticipantsFragment.show(\r\n  fragmentManager,\r\n  "SOME_TAG_HERE"\r\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:"It should show something like below, with the list of participants in the room:"}),"\n",(0,r.jsx)("img",{src:"/static/android-ui-kit/participants-list.png",style:{width:400}}),"\n",(0,r.jsx)(n.h2,{id:"host-controls",children:"Host Controls"}),"\n",(0,r.jsxs)(n.p,{children:["If you are the host of the room, you will see the ",(0,r.jsx)(n.strong,{children:"host controls"})," when you click the ",(0,r.jsx)(n.strong,{children:"three-dot menu"})," on the top right corner of the participants list. The host controls allow you to manage the participants in the room."]}),"\n",(0,r.jsx)(n.p,{children:"The host controls include the following options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mute/Unmute"}),": Mute or unmute a participant."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kick"}),": Kick a participant from the room."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin"}),": Pin a participant's video."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Turn off video"}),": Turn off a participant's video."]}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/static/android-ui-kit/host-controls.png",style:{width:400}}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"You can also use these methods from our participant object to\r\nperform these actions programmatically."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\r\n\r\nparticipant?.let { pcpt ->\r\n  // To disable a participant's video stream\r\n  pcpt.disableVideo();\r\n\r\n  // To disable a participant's audio stream\r\n  pcpt.disableAudio();\r\n\r\n  // To kick a participant from the meeting\r\n  pcpt.kick();\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can also ",(0,r.jsx)(n.code,{children:"pin"})," or ",(0,r.jsx)(n.code,{children:"unpin"}),' a participant in the meeting. All "pinned"\r\nparticipants are added to the ',(0,r.jsx)(n.code,{children:"meeting.participants.pinned"})," map."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\r\n\r\nparticipant?.let { pcpt ->\r\n  // To pin a participant\r\n  pcpt.pin();\r\n\r\n  // To unpin a participant\r\n  pcpt.unpin();\r\n}\n"})})]})}function d(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},28453:(t,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var e=i(96540);const r={},a=e.createContext(r);function s(t){const n=e.useContext(a);return e.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),e.createElement(a.Provider,{value:n},t.children)}}}]);