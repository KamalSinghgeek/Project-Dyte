"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[18804],{35049:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"build-in-call-ui/build-your-own/customize-control-bar","title":"Customize Control Bar","description":"Source Code//github.com/dyte-io/react-native-samples/tree/main/samples/createyourown_ui","source":"@site/docs/rn-ui-kit/build-in-call-ui/build-your-own/customize-control-bar.mdx","sourceDirName":"build-in-call-ui/build-your-own","slug":"/build-in-call-ui/build-your-own/customize-control-bar","permalink":"/react-native/build-in-call-ui/build-your-own/customize-control-bar","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/rn-ui-kit/build-in-call-ui/build-your-own/customize-control-bar.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":4,"frontMatter":{"title":"Customize Control Bar","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Customize Header","permalink":"/react-native/build-in-call-ui/build-your-own/customize-header"},"next":{"title":"Add custom sidebar","permalink":"/react-native/build-in-call-ui/build-your-own/add-custom-sidebar"}}');var o=n(74848),i=n(28453);const a={title:"Customize Control Bar",sidebar_position:4},s=void 0,l={},c=[];function u(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Source Code: ",(0,o.jsx)(t.a,{href:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui",children:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui"})]}),"\n",(0,o.jsxs)(t.p,{children:["Dyte's default header component ",(0,o.jsx)(t.code,{children:"DyteControlbar"})," can be used as the following."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"<DyteControlbar meeting={meeting} />\n"})}),"\n",(0,o.jsx)(t.p,{children:"Following code shows you can customise the DyteControlbar as per your use case."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import React from \'react\';\r\nimport {\r\n  DyteCameraToggle,\r\n  DyteChatToggle,\r\n  DyteControlbar,\r\n  DyteControlbarButton,\r\n  DyteLeaveButton,\r\n  DyteMicToggle,\r\n  DyteMoreToggle,\r\n  DyteMuteToggle,\r\n  DytePluginsToggle,\r\n  DytePollsToggle,\r\n  DyteRecordingToggle,\r\n  DyteScreenShareToggle,\r\n  DyteSettingsToggle,\r\n  useLanguage,\r\n} from \'@dytesdk/react-native-ui-kit\';\r\nimport { UIConfig, defaultIconPack } from \'@dytesdk/react-native-ui-kit\';\r\nimport DyteClient from \'@dytesdk/web-core\';\r\nimport { CustomStates, SetStates } from \'../types\';\r\nimport { View } from \'react-native\';\r\n\r\nfunction ControlBarWithCustomUI({\r\n  meeting,\r\n  states,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  config,\r\n  setStates,\r\n}: {\r\n  meeting: DyteClient;\r\n  config: UIConfig;\r\n  states: CustomStates;\r\n  setStates: SetStates;\r\n}) {\r\n  const t = useLanguage();\r\n  return (\r\n    <>\r\n      {states.activeMoreMenu && (\r\n        <View className="absolute bottom-[60px] w-full">\r\n          <DyteMuteToggle meeting={meeting} />\r\n          <DyteRecordingToggle meeting={meeting} variant="horizontal" />\r\n          <DyteScreenShareToggle meeting={meeting} variant="horizontal" />\r\n          <DyteChatToggle\r\n            meeting={meeting}\r\n            states={states}\r\n            variant="horizontal"\r\n          />\r\n          <DytePollsToggle\r\n            meeting={meeting}\r\n            states={states}\r\n            variant="horizontal"\r\n          />\r\n          <DytePluginsToggle\r\n            meeting={meeting}\r\n            states={states}\r\n            t={t}\r\n            variant="horizontal"\r\n          />\r\n          <DyteSettingsToggle states={states} variant="horizontal" />\r\n          <DyteControlbarButton\r\n            variant="horizontal"\r\n            onClick={() => {\r\n              if (\r\n                states.activeSidebar &&\r\n                !states.sidebar &&\r\n                states.customSidebar === \'warnings\'\r\n              ) {\r\n                setStates((oldState) => {\r\n                  return {\r\n                    ...oldState,\r\n                    activeSidebar: false,\r\n                    sidebar: null,\r\n                    customSidebar: null,\r\n                  };\r\n                });\r\n              } else {\r\n                setStates((oldState) => {\r\n                  return {\r\n                    ...oldState,\r\n                    activeSidebar: true,\r\n                    sidebar: null,\r\n                    customSidebar: \'warnings\',\r\n                  };\r\n                });\r\n              }\r\n            }}\r\n            icon={defaultIconPack.add}\r\n            label={\'Open Custom SideBar\'}\r\n          />\r\n        </View>\r\n      )}\r\n      <View className="flex-row justify-evenly bg-black text-white">\r\n        <DyteMicToggle meeting={meeting} variant="horizontal" />\r\n        <DyteCameraToggle meeting={meeting} variant="horizontal" />\r\n        <DyteMoreToggle\r\n          iconPack={defaultIconPack}\r\n          variant="horizontal"\r\n          t={useLanguage()}\r\n        />\r\n        <DyteLeaveButton t={t} />\r\n      </View>\r\n    </>\r\n  );\r\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);