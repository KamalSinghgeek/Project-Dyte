"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[16787],{22563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"build-in-call-ui/build-your-own/handling-states-and-configs","title":"Handling States and Configs","description":"Source Code//github.com/dyte-io/react-native-samples/tree/main/samples/createyourown_ui","source":"@site/docs/rn-ui-kit/build-in-call-ui/build-your-own/handling-states-and-configs.mdx","sourceDirName":"build-in-call-ui/build-your-own","slug":"/build-in-call-ui/build-your-own/handling-states-and-configs","permalink":"/react-native/build-in-call-ui/build-your-own/handling-states-and-configs","draft":false,"unlisted":false,"editUrl":"https://github.com/dyte-io/docs/tree/main/docs/rn-ui-kit/build-in-call-ui/build-your-own/handling-states-and-configs.mdx","tags":[],"version":"current","lastUpdatedAt":1731210620000,"sidebarPosition":1,"frontMatter":{"title":"Handling States and Configs","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"DyteMeeting","permalink":"/react-native/build-in-call-ui/default-meeting-ui"},"next":{"title":"States Based UI Split","permalink":"/react-native/build-in-call-ui/build-your-own/states based UI Split"}}');var r=n(74848),i=n(28453);n(81398);const o={title:"Handling States and Configs",sidebar_position:1},a=void 0,l={},c=[];function d(e){const t={a:"a",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Source Code: ",(0,r.jsx)(t.a,{href:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui",children:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui"})]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"DyteMeeting"})," component does a lot more than just providing the user interface."]}),"\n",(0,r.jsx)(t.p,{children:"It does the following things internally."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Keeps a mapping of components and show them according to the preset's view_type such as group_call, webinar, and livestream."}),"\n",(0,r.jsx)(t.li,{children:"Provides background color, text colors and other such CSS properties."}),"\n",(0,r.jsx)(t.li,{children:"Maintains states of modals, sidebars between web-core & ui-kit"}),"\n",(0,r.jsx)(t.li,{children:"Shifts the control bar buttons to More menu if the screen size is small."}),"\n",(0,r.jsx)(t.li,{children:"Passes config, states, translation, icon packs to all child components."}),"\n",(0,r.jsx)(t.li,{children:"It is the target element that gets full screened on click of full screen toggle."}),"\n",(0,r.jsx)(t.li,{children:"Joins the meeting automatically if showSetupScreen is false."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Since we are splitting ",(0,r.jsx)(t.code,{children:"DyteMeeting"})," component in pieces, we need to do these ourselves now."]}),"\n","\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import React, {useEffect, useState} from 'react';\r\nimport {\r\n  DyteProvider,\r\n  useDyteClient,\r\n  useDyteMeeting,\r\n} from '@dytesdk/react-native-core';\r\nimport DyteClient from '@dytesdk/web-core';\r\nimport {\r\n  DyteUIProvider,\r\n  UIConfig,\r\n  defaultConfig,\r\n  generateConfig,\r\n} from '@dytesdk/react-native-ui-kit';\r\nimport {DyteThemePresetV1} from '@dytesdk/web-core';\r\nimport {DyteStateListenersUtils} from './dyte-state-listeners';\r\nimport {CustomStates} from './types';\r\nimport {store} from './utils/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nfunction Meeting() {\r\n  const {meeting} = useDyteMeeting();\r\n  const [config, setConfig] = useState<UIConfig>(defaultConfig);\r\n  const [states, setStates] = useState<CustomStates>({\r\n    meeting: 'setup',\r\n    sidebar: 'chat',\r\n    activeMoreMenu: false,\r\n    activeLeaveConfirmation: false,\r\n    permissionGranted: true,\r\n    prefs: {\r\n      mirrorVideo: true,\r\n      muteNotificationSounds: false,\r\n      autoScroll: true,\r\n    },\r\n    designSystem: {\r\n      colors: {\r\n        brand: {\r\n          300: '#497CFD',\r\n          400: '#356EFD',\r\n          500: '#2160FD',\r\n          600: '#0D51FD',\r\n          700: '#2160FD',\r\n        },\r\n        background: {\r\n          1000: '#080808',\r\n          900: '#1A1A1A',\r\n          800: '#333333',\r\n          700: '#4C4C4C',\r\n          600: '#666666',\r\n        },\r\n        text: '#FFFFFF',\r\n        textOnBrand: '#FFFFFF',\r\n        videoBg: '#333333',\r\n        success: '#83D017',\r\n        danger: '#FF2D2D',\r\n        warning: '#FFCD07',\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function setupMeetingConfigs() {\r\n      const theme = meeting!.self.config;\r\n      const generatedConfig = generateConfig(theme as DyteThemePresetV1, {});\r\n      const newConfig = generatedConfig.config;\r\n\r\n      setConfig({...newConfig});\r\n\r\n      const stateListenersUtils = new DyteStateListenersUtils(\r\n        () => meeting,\r\n        () => states,\r\n        () => setStates,\r\n      );\r\n      stateListenersUtils.addDyteEventListeners();\r\n    }\r\n\r\n      setupMeetingConfigs();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [meeting]);\r\n  return <CustomDyteMeetingUI meeting={meeting} config={config} states={states} setStates={setStates} />;\r\n}\r\n\r\nfunction CustomDyteMeetingUI({ meeting, config, states, setStates }: { meeting: DyteClient, config: UIConfig, states: CustomStates, setStates: SetStates}) {\r\n  return (\r\n    <View>\r\n      <DyteText>Your Custom UI will come here </DyteText>\r\n    </View>\r\n  );\r\n}\r\n\r\nclass DyteStateListenersUtils {\r\n  getStates: () => CustomStates;\r\n\r\n  getStateSetter: () => (newState: CustomStates) => void;\r\n\r\n  getMeeting: () => DyteClient;\r\n\r\n  get states() {\r\n    return this.getStates();\r\n  }\r\n\r\n  get setGlobalStates() {\r\n    return this.getStateSetter();\r\n  }\r\n\r\n  get meeting() {\r\n    return this.getMeeting();\r\n  }\r\n\r\n  constructor(\r\n    getMeeting: () => DyteClient,\r\n    getGlobalStates: () => CustomStates,\r\n    getGlobalStateSetter: () => (newState: CustomStates) => void,\r\n  ) {\r\n    this.getMeeting = getMeeting;\r\n    this.getStates = getGlobalStates;\r\n    this.getStateSetter = getGlobalStateSetter;\r\n  }\r\n  private updateStates(newState: CustomStates) {\r\n    this.setGlobalStates((oldState: CustomStates) => {\r\n      return {\r\n        ...oldState,\r\n        ...newState,\r\n      };\r\n    });\r\n  }\r\n  private roomJoinedListener = () => {\r\n    this.updateStates({meeting: 'joined'});\r\n  };\r\n\r\n  private socketServiceRoomJoinedListener = () => {\r\n    if (\r\n      this.meeting.stage.status === 'ON_STAGE' ||\r\n      this.meeting.stage.status === undefined\r\n    ) {\r\n      return;\r\n    }\r\n    this.updateStates({meeting: 'joined'});\r\n  };\r\n\r\n  private waitlistedListener = () => {\r\n    this.updateStates({meeting: 'waiting'});\r\n  };\r\n\r\n  private roomLeftListener = ({state}: {state: RoomLeftState}) => {\r\n    const states = this.states;\r\n    if (states?.roomLeftState === 'disconnected') {\r\n      this.updateStates({meeting: 'ended', roomLeftState: state});\r\n      return;\r\n    }\r\n    this.updateStates({meeting: 'ended', roomLeftState: state});\r\n  };\r\n\r\n  private mediaPermissionUpdateListener = ({\r\n    kind,\r\n    message,\r\n  }: {\r\n    kind: any; // PermissionSettings['kind'];\r\n    message: string;\r\n  }) => {\r\n    if (['audio', 'video'].includes(kind!)) {\r\n      if (\r\n        message === 'ACCEPTED' ||\r\n        message === 'NOT_REQUESTED' ||\r\n        this.states.activeDebugger\r\n      ) {\r\n        return;\r\n      }\r\n      const permissionModalSettings: any = {\r\n        enabled: true,\r\n        kind,\r\n      };\r\n      this.updateStates({activePermissionsMessage: permissionModalSettings});\r\n    }\r\n  };\r\n\r\n  private joinStateAcceptedListener = () => {\r\n    this.updateStates({activeJoinStage: true});\r\n  };\r\n\r\n  private handleChangingMeeting(destinationMeetingId: string) {\r\n    this.updateStates({\r\n      activeBreakoutRoomsManager: {\r\n        ...this.states.activeBreakoutRoomsManager,\r\n        active: this.states.activeBreakoutRoomsManager!.active,\r\n        destinationMeetingId,\r\n      },\r\n    });\r\n  }\r\n\r\n  addDyteEventListeners() {\r\n    if (this.meeting.meta.viewType === 'LIVESTREAM') {\r\n      this.meeting.self.addListener(\r\n        'socketServiceRoomJoined',\r\n        this.socketServiceRoomJoinedListener,\r\n      );\r\n    }\r\n    this.meeting.self.addListener('roomJoined', this.roomJoinedListener);\r\n\r\n    this.meeting.self.addListener('waitlisted', this.waitlistedListener);\r\n    this.meeting.self.addListener('roomLeft', this.roomLeftListener);\r\n    this.meeting.self.addListener(\r\n      'mediaPermissionUpdate',\r\n      this.mediaPermissionUpdateListener,\r\n    );\r\n    this.meeting.self.addListener(\r\n      'joinStageRequestAccepted',\r\n      this.joinStateAcceptedListener,\r\n    );\r\n\r\n    if (this.meeting.connectedMeetings.supportsConnectedMeetings) {\r\n      this.meeting.connectedMeetings.once(\r\n        'changingMeeting',\r\n        this.handleChangingMeeting,\r\n      );\r\n    }\r\n  }\r\n  cleanupDyteEventListeners() {}\r\n}\r\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"Let's discuss the bits and pieces one by one."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"const theme = meeting!.self.config;\r\nconst { config } = generateConfig(theme, meeting!);\n"})}),"\n",(0,r.jsx)(t.p,{children:"In the above code snippets, we are generating configs using the preset configurations & meeting configs."}),"\n",(0,r.jsx)(t.p,{children:"Post this, We are extending the config to pass the targetElement to full screen toggle and storing this config to be passed to child components."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"setConfig({ ...config });\n"})}),"\n",(0,r.jsx)(t.p,{children:"We need to also ensure that web-core & ui-kit states are in sync. Since we are handling states now, we will have to add web-core & ui-kit listeners."}),"\n",(0,r.jsxs)(t.p,{children:["To add react-native-core listeners, ",(0,r.jsx)(t.code,{children:"DyteStateListenersUtils"})," class, is being used."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"const stateListenersUtils = new DyteStateListenersUtils(\r\n  () => meeting,\r\n  () => states,\r\n  () => setStates\r\n);\r\nstateListenersUtils.addDyteEventListeners();\n"})}),"\n",(0,r.jsxs)(t.p,{children:["To join the meeting, we are using ",(0,r.jsx)(t.code,{children:"await meeting.join();"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Now that we know the extra overhead that comes with splitting ",(0,r.jsx)(t.code,{children:"DyteMeeting"})," component, let's start with showing custom UIs as per the meeting state."]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},81398:(e,t,n)=>{n.d(t,{A:()=>p});var s=n(24967),r=n(96540);const i=e=>`import React, { useEffect } from 'react';\nimport { DyteProvider, useDyteClient } from '@dytesdk/react-web-core';\nimport { provideDyteDesignSystem } from '@dytesdk/react-ui-kit';\nimport Custom from './meeting.tsx';\n\nconst initInProgress = {\n  value: false,\n};\n\nexport default function App() {\n  const [meeting, initMeeting] = useDyteClient();\n\n  useEffect(() => {\n    if (initInProgress.value) return;\n    initInProgress.value = true;\n    initMeeting({\n      roomName: 'qplrfc-uuujcj',\n      authToken:\n        'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjdkYzU0MGRjLWQ5MjUtNDVjMi1hZTFiLWM2NDc2YTUwNmM2NyIsImxvZ2dlZEluIjp0cnVlLCJpYXQiOjE2NjU2NDcxNjksImV4cCI6MTY3NDI4NzE2OX0.hJvo1PV1_jaxwiQbT8ft7Yi4lhIPgAsuEJHqohHYC_2XNef7kA4NhrYLvwrrxOo3AKh9_XTjnj_bsgzIDh35RRggawJniEjuE83ju2xhMXMVaa7TNDje2BsH5-VnFJ4y5hOwxGphrP5iHY_U4k_0qOQcEfVEJMymJvx0gq_Ueds',\n      defaults: {\n        audio: false,\n        video: false,\n      },\n    }).then((m) => {\n\n\n      // window.meeting = m;\n      m.meta.meetingStartedTimestamp = new Date();\n      m.participants.setMockParticipantCount(5, 5);\n      // m.recording.recordingState = 'RECORDING';\n      const theme = document.getElementsByTagName('html')[0].dataset['theme'];\n      initInProgress.value = false;\n      provideDyteDesignSystem(document.body, {\n        theme: "${e}",\n      });\n      document.getElementsByTagName("html")[0].classList.remove("dark");\n      document.getElementsByTagName("html")[0].classList.remove("light");\n      document.getElementsByTagName("html")[0].classList.add("${e}");\n\n      HTMLAudioElement.prototype.play = function() {};\n      window.tailwind.config.darkMode = 'selector';\n    });\n  }, []);\n\n\n  return (<div className="bg-white dark:bg-black flex justify-center items-center w-full h-screen">\n    <DyteProvider value={meeting}><Custom /></DyteProvider>\n    </div>\n  );\n}`;var o=n(33257),a=n(59047);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},s=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),s.forEach((function(t){l(e,t,n[t])}))}return e}const d=(e,t,n,s={})=>"react-ts"==e?{files:{"/App.tsx":i(t),"/meeting.tsx":n},activeFile:"/meeting.tsx",visibleFiles:["/meeting.tsx",...Object.keys(s)],scripts:[]}:"angular"==e?{files:{"/src/app/app.component.html":'<dyte-meeting #meeting show-setup-screen="true"></dyte-meeting>',"/src/app/app.component.ts":n,"/src/app/app.module.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nimport { DyteComponentsModule } from '@dytesdk/angular-ui-kit';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, DyteComponentsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}"},activeFile:"/src/app/app.component.ts",visibleFiles:["/src/app/app.module.ts","/src/app/app.component.ts","/src/app/app.component.html",...Object.keys(s)],scripts:[]}:{activeFile:"/index.html",visibleFiles:["/index.html"],files:{"/index.html":n},scripts:["https://cdn.jsdelivr.net/npm/@dytesdk/web-core@1.31.0-stripped.2/dist/index.iife.js","https://assets.dyte.io/docs/web.js"]},m=e=>"react-ts"==e?{"@dytesdk/react-ui-kit":"1.66.0","@dytesdk/react-web-core":"1.36.4-stripped.1","@dytesdk/web-core":"1.31.0-stripped.2"}:"angular"==e?{"@dytesdk/angular-ui-kit":"1.66.0","@dytesdk/web-core":"1.31.0-stripped.2"}:{},g=(e,t)=>{let n=[];return e.forEach((e=>{for(let t=e.start;t<=e.end;t++)n.push({className:"highlight",line:t})})),t.forEach((e=>{for(let t=e.start;t<=e.end;t++)n.push({className:"hide",line:t})})),n},u=e=>"light"===e?a.Zw:a.iU;function p({file:e,files:t={},framework:n="react-ts",entry:i,highlight:a=[],additionalDecorators:l=[],hide:p=[],minHeight:h="480px"}){const{colorMode:f}=(0,o.G)(),y=d(n,f,null!=e?e:"",t),v=m(n),S=[...l,...g(a,p)],[w,x]=(0,r.useState)(0===S.length);return(0,r.useEffect)((()=>{const e=()=>{0!==S.length&&1==w&&x(!1)};return window.addEventListener("click",e),()=>{window.removeEventListener("click",e)}}),[S.length,w]),r.createElement(s.l5,{template:n,customSetup:{dependencies:c({},v)},theme:u(f),options:{activeFile:y.activeFile,visibleFiles:y.visibleFiles,externalResources:["https://assets.dyte.io/docs/tailwind.js",...y.scripts]},files:y.files},r.createElement("div",{className:"relative top-2 z-10 flex w-fit items-center space-x-2 rounded-sm bg-neutral-800 p-1.5 text-xs font-bold text-neutral-100 dark:bg-neutral-300  dark:text-neutral-900"},r.createElement("span",null,"LIVE EDITOR"),r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 384 512",className:"ml-2 h-4"},r.createElement("path",{fill:"#FFD43B",d:"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z"}))),r.createElement("div",{className:"flex flex-col rounded-sm border border-secondary-700 mb-4"},r.createElement("div",{onClick:e=>{e.stopPropagation(),x(!0)},className:"cursor-text"},w?r.createElement(s.cW,{showLineNumbers:!0,showInlineErrors:!0,className:"code-viewer",style:{flexGrow:0,flexShrink:1,flexBasis:"max-content",maxHeight:"500px",overflow:"scroll"}}):r.createElement(s.R8,{className:"code-viewer",initMode:"immediate",decorators:S,style:{flexGrow:0,flexShrink:1,flexBasis:"max-content",maxHeight:"500px"}})),r.createElement(s.G5,{showOpenInCodeSandbox:!1,className:"border-t-2 border-t-secondary-700",style:{flex:1,minHeight:h}})))}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);